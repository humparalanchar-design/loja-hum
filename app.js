import { db } from './firebase.js';
import { collection, addDoc, doc, setDoc, getDoc, updateDoc, onSnapshot, serverTimestamp } from 'https://www.gstatic.com/firebasejs/10.12.5/firebase-firestore.js';
const tabs = document.querySelectorAll('.tab-btn');
const views = { home:document.getElementById('tab-home'), produtos:document.getElementById('tab-produtos'), estoque:document.getElementById('tab-estoque'), pedidos:document.getElementById('tab-pedidos'), clientes:document.getElementById('tab-clientes'), config:document.getElementById('tab-config') };
tabs.forEach(btn=>btn.addEventListener('click',()=>{ tabs.forEach(b=>b.classList.remove('active')); btn.classList.add('active'); Object.values(views).forEach(v=>v.classList.remove('active')); views[btn.dataset.tab].classList.add('active'); }));
const formConfig=document.getElementById('formConfig'); const whatsInput=document.getElementById('whatsNumber');
async function carregarConfig(){ const ref=doc(db,'config','loja'); const snap=await getDoc(ref); if(snap.exists()) whatsInput.value=snap.data().whatsapp||''; } 
formConfig?.addEventListener('submit', async (e)=>{ e.preventDefault(); const ref=doc(db,'config','loja'); await setDoc(ref,{ whatsapp:whatsInput.value.trim() },{merge:true}); alert('Configurações salvas ✅');}); carregarConfig();
function el(t,c){const e=document.createElement(t); if(c) e.className=c; return e;} function currency(v){return Number(v||0).toLocaleString('pt-BR',{style:'currency',currency:'BRL'});} 
function statusFromStock(a,m){ if(a<=0) return '<span class="status-zero">Zerado</span>'; if(a<m) return '<span class="status-low">Baixo</span>'; return '<span class="status-ok">OK</span>'; }
const formProduto=document.getElementById('formProduto'); const listaProdutos=document.getElementById('listaProdutos'); const tbodyEstoque=document.getElementById('tbodyEstoque');
formProduto?.addEventListener('submit', async (e)=>{ e.preventDefault(); const data=Object.fromEntries(new FormData(formProduto).entries()); const produto={nome:data.nome,preco:Number(data.preco),categoria:data.categoria||'',tipo:data.tipo||'',descricao:data.descricao||'',detalhes:data.detalhes||'',estoqueAtual:Number(data.estoqueInicial||0),estoqueMinimo:Number(data.estoqueMinimo||3),createdAt:serverTimestamp(),ativo:true}; await addDoc(collection(db,'produtos'),produto); formProduto.reset(); alert('Produto salvo! ✅'); });
onSnapshot(collection(db,'produtos'),(snap)=>{ const produtos=[]; snap.forEach(d=>produtos.push({id:d.id,...d.data()})); renderProdutos(produtos); renderEstoque(produtos); });
function renderProdutos(produtos){ listaProdutos.innerHTML=''; produtos.forEach(p=>{ const card=el('div','prod-card'); card.innerHTML=`<h4>${p.nome}</h4><div class="badge">${p.categoria||'-'}</div> <div class="badge">${p.tipo||'-'}</div><div class="note">${currency(p.preco)}</div><div class="actions"><button class="btn small" data-act="menos" data-id="${p.id}">-1</button><button class="btn small" data-act="mais" data-id="${p.id}">+1</button></div><div class="note">Estoque: ${p.estoqueAtual??0} • Mínimo: ${p.estoqueMinimo??3}</div>`; listaProdutos.appendChild(card); }); listaProdutos.querySelectorAll('button[data-act]').forEach(btn=>{ btn.addEventListener('click', async ()=>{ const id=btn.dataset.id, act=btn.dataset.act; const ref=doc(db,'produtos',id); const snap=await getDoc(ref); if(!snap.exists()) return; const p=snap.data(); const novo=Math.max(0,(p.estoqueAtual||0)+(act==='mais'?1:-1)); await updateDoc(ref,{estoqueAtual:novo}); }); }); }
function renderEstoque(produtos){ const total=produtos.length; const emEstoque=produtos.filter(p=>(p.estoqueAtual||0)>0).length; const baixo=produtos.filter(p=>(p.estoqueAtual||0)>0 && (p.estoqueAtual||0)<(p.estoqueMinimo||3)).length; const zerado=produtos.filter(p=>(p.estoqueAtual||0)===0).length; document.getElementById('kpiTotal').textContent=total; document.getElementById('kpiEmEstoque').textContent=emEstoque; document.getElementById('kpiBaixo').textContent=baixo; document.getElementById('kpiZerado').textContent=zerado; tbodyEstoque.innerHTML=''; produtos.forEach(p=>{ const tr=el('tr'); tr.innerHTML=`<td>${p.nome}</td><td>${p.categoria||'-'}</td><td>${p.tipo||'-'}</td><td>${p.estoqueAtual??0}</td><td>${p.estoqueMinimo??3}</td><td>${statusFromStock(p.estoqueAtual||0,p.estoqueMinimo||3)}</td><td><button class="btn small" data-id="${p.id}" data-action="ajustar">Ajustar -1</button></td>`; tbodyEstoque.appendChild(tr); }); tbodyEstoque.querySelectorAll('button[data-action="ajustar"]').forEach(btn=>{ btn.addEventListener('click', async ()=>{ const id=btn.dataset.id; const ref=doc(db,'produtos',id); const snap=await getDoc(ref); if(!snap.exists()) return; const p=snap.data(); const novo=Math.max(0,(p.estoqueAtual||0)-1); await updateDoc(ref,{estoqueAtual:novo}); }); }); }
const formCliente=document.getElementById('formCliente'); const listaClientes=document.getElementById('listaClientes');
formCliente?.addEventListener('submit', async (e)=>{ e.preventDefault(); const data=Object.fromEntries(new FormData(formCliente).entries()); const cliente={nome:data.nome,telefone:data.telefone,email:data.email,cpf:data.cpf||'',nascimento:data.nascimento||'',cep:data.cep||'',cidade:data.cidade||'',endereco:data.endereco||'',numero:data.numero||'',complemento:data.complemento||'',bairro:data.bairro||'',obs:data.obs||'',createdAt:serverTimestamp(),ativo:true}; await addDoc(collection(db,'clientes'),cliente); formCliente.reset(); alert('Cliente salvo! ✅'); });
onSnapshot(collection(db,'clientes'),(snap)=>{ listaClientes.innerHTML=''; snap.forEach(docu=>{ const c=docu.data(); const div=el('div','card'); div.innerHTML=`<strong>${c.nome}</strong><div class="note">${c.email} • ${c.telefone}</div>`; listaClientes.appendChild(div); }); });
const formPedido=document.getElementById('formPedido'); const listaPedidos=document.getElementById('listaPedidos');
formPedido?.addEventListener('submit', async (e)=>{ e.preventDefault(); const data=Object.fromEntries(new FormData(formPedido).entries()); let itens=[]; try{ itens=JSON.parse(data.itens||'[]'); }catch(err){ alert('Itens inválidos. Precisa ser JSON.'); return;} const pedido={clienteEmail:data.clienteEmail,itens,status:'aberto',createdAt:serverTimestamp()}; await addDoc(collection(db,'pedidos'),pedido); formPedido.reset(); alert('Pedido criado! ✅'); });
onSnapshot(collection(db,'pedidos'),(snap)=>{ listaPedidos.innerHTML=''; snap.forEach(d=>{ const p={id:d.id,...d.data()}; const card=el('div','card'); card.innerHTML=`<div><strong>Cliente:</strong> ${p.clienteEmail}</div><div><strong>Status:</strong> ${p.status}</div><pre class="note" style="white-space:pre-wrap">${JSON.stringify(p.itens,null,2)}</pre><div class="actions">${p.status==='aberto' ? '<button class="btn small" data-approve> Aprovar </button>' : ''}</div>`; card.querySelector('[data-approve]')?.addEventListener('click', async ()=>{ for(const item of (p.itens||[])){ if(!item.produtoId||!item.qtd) continue; const pref=doc(db,'produtos',item.produtoId); const psnap=await getDoc(pref); if(psnap.exists()){ const prod=psnap.data(); const novo=Math.max(0,(prod.estoqueAtual||0)-Number(item.qtd||0)); await updateDoc(pref,{estoqueAtual:novo}); } } await updateDoc(doc(db,'pedidos',p.id),{status:'aprovado'}); const conf=await getDoc(doc(db,'config','loja')); const number=conf.exists()? (conf.data().whatsapp||'') : ''; if(number){ const msg=encodeURIComponent(`Pedido aprovado! Cliente: ${p.clienteEmail}. Itens: ${JSON.stringify(p.itens)}`); window.open(`https://wa.me/${number}?text=${msg}`,'_blank'); } else { alert('Pedido aprovado! (Configure o número de WhatsApp em Configurações para enviar a mensagem automática)'); } }); listaPedidos.appendChild(card); }); });
